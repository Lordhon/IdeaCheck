
services:
  backend:
    command: gunicorn IdeaCheack.wsgi:application --bind 0.0.0.0:8000 --timeout 3600
    build:
      context: ./Backend_IdeaCheck/IdeaCheack
    container_name: django
    ports:
      - "8000:8000"
    env_file:
      - .env  
    environment:
      DJANGO_SETTINGS_MODULE: IdeaCheack.settings
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${PASSWORDDB}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      POSTGRES_DB: IdeaCheck
    depends_on:
      - db
      - redis 

  frontend:
    build:
      context: ./Frontend_IdeaCheck/IdeaCheck
      dockerfile: Dockerfile
    container_name: react
    expose:
      - "80"     
    depends_on:
      - backend
      


  db:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: IdeaCheck
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${PASSWORDDB}
    volumes:
      - db_data:/var/lib/postgresql/data
  telegram-bot:
    build:
      context: ./IdeaCheckBot  
      dockerfile: Dockerfile
    volumes:
      - ./IdeaCheckBot:/app  
    command: ["python", "bot.py"]


  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/:ro
    depends_on:
      - backend
      - frontend
  redis:
    image: redis:8-alpine
    container_name: redis
   
    restart: unless-stopped
    
  celery_worker:
    build:
        context: ./Backend_IdeaCheck/IdeaCheack
    command: celery -A IdeaCheack worker --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DJANGO_SETTINGS_MODULE: IdeaCheack.settings
      CELERY_BROKER_URL: redis://redis:6379/0
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: IdeaCheck
      DB_USER: postgres
      PASSWORDDB: ${PASSWORDDB}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      EMAIL_HOST_USER: ivleff.timivlev@yandex.ru
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
  

volumes:
  db_data:
